# Workflow pour construire et déployer un site Nuxt 3 sur GitHub Pages
#
# Pour commencer avec Nuxt 3 voir: https://nuxt.com/docs/getting-started/introduction
#
name: Déployer le site Nuxt sur Pages

on:
  # S'exécute lors des push sur la branche par défaut
  push:
    branches: ["main"]

  # Permet d'exécuter ce workflow manuellement depuis l'onglet Actions
  workflow_dispatch:

# Définit les permissions du jeton GITHUB_TOKEN pour permettre le déploiement sur GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Autoriser un seul déploiement simultané, en ignorant les exécutions mises en file d'attente entre l'exécution en cours et la dernière mise en file d'attente.
# Cependant, ne PAS annuler les exécutions en cours car nous voulons permettre à ces déploiements de production de se terminer.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Tâche de construction
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Détecter le gestionnaire de paquets
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/pnpm-lock.yaml" ]; then
            echo "manager=pnpm" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Impossible de déterminer le gestionnaire de paquets"
            exit 1
          fi
      - name: Configuration de Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
      - name: Configuration de PNPM
        if: ${{ steps.detect-package-manager.outputs.manager == 'pnpm' }}
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false
      - name: Configuration de Pages
        uses: actions/configure-pages@v5
        with:
          # Injecte automatiquement base dans votre configuration Nuxt
          static_site_generator: nuxt
      - name: Restaurer le cache
        uses: actions/cache@v4
        with:
          path: |
            dist
            .nuxt
            node_modules/.vite
            node_modules/.cache
          key: ${{ runner.os }}-nuxt-build-${{ hashFiles('package-lock.json') || hashFiles('yarn.lock') || hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-nuxt-build-
      - name: Installer les dépendances
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
      - name: Générer le site statique avec Nuxt
        run: ${{ steps.detect-package-manager.outputs.manager }} run generate
      - name: Télécharger l'artefact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  # Tâche de déploiement
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Déployer sur GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
